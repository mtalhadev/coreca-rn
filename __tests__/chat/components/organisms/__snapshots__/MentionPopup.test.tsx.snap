// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MentionPopup test renders UI correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "borderRadius": 5,
      "bottom": 40,
      "elevation": 8,
      "height": "auto",
      "left": 10,
      "maxHeight": 400,
      "padding": 10,
      "paddingVertical": 5,
      "position": "absolute",
      "shadowColor": "#000",
      "shadowOffset": Object {
        "height": 4,
        "width": 0,
      },
      "shadowOpacity": 0.3,
      "shadowRadius": 4.65,
      "width": 675,
      "zIndex": 100,
    }
  }
>
  <RCTScrollView
    data={
      Array [
        Object {
          "worker": Object {
            "imageColorHue": 40,
            "imageUrl": "https://profile-image",
            "name": "ABC",
            "sImageUrl": "https://profile-image-s",
            "xsImageUrl": "https://profile-image-xs",
          },
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    showsHorizontalScrollIndicator={false}
    showsVerticalScrollIndicator={false}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "backgroundColor": "#FFF",
        "height": "100%",
        "width": "100%",
      }
    }
    viewabilityConfigCallbackPairs={Array []}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#FFF",
                  "borderRadius": 3,
                  "flexDirection": "row",
                  "height": 28,
                  "marginBottom": 2,
                  "width": 655,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#888",
                  "borderBottomLeftRadius": 30,
                  "borderBottomRightRadius": 30,
                  "borderRadius": 30,
                  "borderTopLeftRadius": 30,
                  "borderTopRightRadius": 30,
                  "height": 25,
                  "justifyContent": "center",
                  "width": 25,
                }
              }
            >
              <RNCMaskedView>
                <View
                  pointerEvents="none"
                  style={
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#000",
                        "borderRadius": 30,
                        "height": 25,
                        "width": 25,
                      }
                    }
                  />
                </View>
                <Image
                  resizeMode="cover"
                  source={
                    Object {
                      "uri": "https://profile-image-xs",
                    }
                  }
                  style={
                    Object {
                      "height": 25,
                      "width": 25,
                    }
                  }
                  testID="ImageIcon-Image"
                />
              </RNCMaskedView>
              <View
                style={
                  Object {
                    "borderColor": "#C7D601",
                    "borderRadius": 30,
                    "borderWidth": 1,
                    "height": 25,
                    "position": "absolute",
                    "width": 25,
                  }
                }
                testID="ImageIcon-Border"
              />
            </View>
            <View
              style={
                Object {
                  "height": 25,
                  "justifyContent": "center",
                  "marginLeft": 10,
                  "paddingBottom": 3,
                  "width": 615,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#0082C7",
                      "fontSize": 14,
                    },
                    Object {
                      "fontFamily": "NotoSansJP_400Regular",
                    },
                  ]
                }
              >
                @
                ABC
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
